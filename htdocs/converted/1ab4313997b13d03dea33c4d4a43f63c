<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE html>
<html lang="en" dir="ltr" id="developer-mozilla-org"><body id="docs" class="section-docs en ltr yui-skin-sam PageDW-enJavaScriptReferenceGlobalObjectsFunctioncall" role="document">&#13;
<!--[if lte IE 8]>
<noscript><div class="global-notice">
<p><strong>Warning:</strong> The Mozilla Developer Network website employs emerging web standards that may not be fully supported in some versions of MicroSoft Internet Explorer. You can improve your experience of this website by enabling JavaScript.</p>
</div></noscript>
<![endif]-->&#13;
&#13;
<section class="entry-content"><div class="wrap">&#13;
  <div id="content-main" class="full">&#13;
&#13;
    &#13;
        &#13;
    <article class="article PageDW-enJavaScriptReferenceGlobalObjectsFunctioncall" role="main"><div class="page-title hideforedit">&#13;
              <h1 class="first entry-title roundTop" id="title">Function.call</h1>            &#13;
      &#13;
              </div>&#13;
      &#13;
    <div class="page-content boxed">&#13;
&#13;
     &#13;
       &#13;
    &#13;
            &#13;
      <div id="page-top"><div class="pageText" id="pageText"><div id="section_1"><span id="Summary"/><h2 class="editable">Summary</h2>
<p>Calls a function with a given <code>this</code> value and arguments provided individually.</p>
<div class="note"><strong>NOTE:</strong> While the syntax of this function is almost identical to that of <code><a title="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply">apply()</a></code>, the fundamental difference is that <code>call()</code> accepts an argument list, while <code>apply()</code> accepts a single array of arguments.</div>
<table class="standard-table"><thead><tr><th class="header" colspan="2">Method of <a title="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function">Function</a></th> </tr></thead><tbody><tr><td>Implemented in</td> <td>JavaScript 1.3</td> </tr><tr><td>ECMAScript Edition</td> <td>ECMAScript 3rd Edition</td> </tr></tbody></table></div><div id="section_2"><span id="Syntax"/><h2 class="editable">Syntax</h2>
<p><code><em>fun</em>.call(<em>thisArg</em>[, <em>arg1</em>[, <em>arg2</em>[, ...]]])</code></p>
</div><div id="section_3"><span id="Parameters"/><h2 style="position: static; z-index: auto; " class="editable">Parameters</h2>
<dl><dt><code>thisArg</code></dt> <dd>The value of <code>this</code> provided for the call to <em><code>fun</code></em>.  Note that this may not be the actual value seen by the method: if the method is a function in <a title="en/JavaScript/Strict mode" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/Strict_mode">non-strict mode</a> code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</dd>
</dl><dl><dt><code>arg1, arg2, ...</code></dt> <dd>Arguments for the object.</dd>
</dl></div><div id="section_4"><span id="Description"/><h2 class="editable">Description</h2>
<p>You can assign a different <code>this</code> object when calling an existing function. <code>this</code> refers to the current object, the calling object.</p>
<p>With <code>call</code>, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.</p>
</div><div id="section_5"><span id="Examples"/><h2 class="editable">Examples</h2>
<div id="section_6"><span id="Using_call_to_chain_constructors_for_an_object"/><h3 class="editable">Using <code>call</code> to chain constructors for an object</h3>
<p>You can use <code>call</code> to chain constructors for an object, similar to Java. In the following example, the constructor for the <code>Product</code> object is defined with two parameters, <code>name</code> and <code>value</code>. Two other functions <code>Food</code> and <code>Toy</code> invoke <code>Product</code> passing <code>this</code> and <code>name</code> and <code>value</code>. Product initializes the properties name and price, both specialized functions define the category.</p>
&#13;
          <pre name="code" class="js">function Product(name, price) {
  this.name = name;
  this.price = price;

  if (price &lt; 0)
    throw RangeError('Cannot create product "' + name + '" with a negative price');
  return this;
}

function Food(name, price) {
  Product.call(this, name, price);
  this.category = 'food';
}
Food.prototype = new Product();

function Toy(name, price) {
  Product.call(this, name, price);
  this.category = 'toy';
}
Toy.prototype = new Product();

var cheese = new Food('feta', 5);
var fun = new Toy('robot', 40);</pre>&#13;
        
</div><div id="section_7"><span id="Using_call_to_invoke_an_anonymous_function"/><h3 class="editable">Using <code>call</code> to invoke an anonymous function</h3>
<p>In this purely constructed example, we create anonymous function and use <code>call</code> to invoke it on every object in an array. The main purpose of the anonymous function here is to add a print function to every object, which is able to print the right index of the object in the array. Passing the object as <code>this</code> value was not strictly necessary, but is done for explanatory purpose.</p>
&#13;
          <pre name="code" class="js">var animals = [
  {species: 'Lion', name: 'King'},
  {species: 'Whale', name: 'Fail'}
];

for (var i = 0; i &lt; animals.length; i++) {
  (function (i) { 
    this.print = function () { 
      console.log('#' + i  + ' ' + this.species + ': ' + this.name); 
    } 
  }).call(animals[i], i);
}</pre>&#13;
        
</div></div><div id="section_8"><span id="See_Also"/><h2 class="editable">See Also</h2>
<p><a title="en/Core_JavaScript_1.5_Reference/Global_Objects/Function/apply" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply">apply</a></p>
<p/></div></div></div>&#13;
            <section class="page-meta"><section id="page-files"><h2>Attachments <span class="sub">(0)</span></h2>&#13;
            <div id="pageFiles"><div class="nofiles"> </div></div>            <div id="deki-image-gallery-lite"><table class="table empty" width="100%" cellspacing="0" cellpadding="0" border="0"><colgroup><col width="33%"/><col width="33%"/><col width="33%"/></colgroup><tbody><tr class="bg1"><th class="col1" colspan="3">Images 0</th></tr><tr class="bg2"><td class="col1 empty" colspan="3">No images to display in the gallery.</td></tr></tbody></table></div>            <p class="add"><a title="Attach file" class="disabled ">Attach file</a></p>&#13;
          </section></section></div>&#13;
&#13;
    </article><p class="last-mod hideforedit">&#13;
      Page last modified <a href="/index.php?title=en/JavaScript/Reference/Global_Objects/Function/call&amp;action=history" title="20:02, 12 Nov 2011">20:02, 12 Nov 2011</a> by <a href="/User:salty-horse" class="link-user" rel="internal">salty-horse</a>    </p>&#13;
&#13;
  </div><!-- /#content-main -->&#13;
&#13;
</div><!-- /.wrap -->&#13;
</section><!-- /#content --><div class="ui-msg-wrap" id="MTMessage" style="display: none;">
	<div class="ui-msg ui-errormsg" id="MTMessageStyle">
		<div class="ui-msg-opt">
			<ul><li><a href="#" class="dismiss" onclick="return MTMessage.Hide();">dismiss message</a></li>
				<li><a href="#" class="details" id="MTMessageDetailsLink" onclick="return MTMessage.ShowDetails(this);">view details</a></li>
			</ul><div class="ui-msg-autoclose">
				<span id="MTMessageUnpaused" style="display: inline;">Message will close by itself in <span id="MTMessageTimer"/> seconds</span>
				<span id="MTMessagePaused" style="display: none;">Message timer has been stopped</span>
			</div>
		</div>
		<div class="ui-msg-header" id="MTMessageHeader"/>
		<div class="ui-msg-desc" id="MTMessageDesc"/>
		<div class="ui-msg-desc" id="MTMessageDetails" style="display: none;">
			<p>Viewing Details:</p>
		</div>
	</div>
</div><!-- Served by pm-dekiwiki01.mozilla.org in 1.04 secs. --><!--
	Verb      Path                                              Time(ms)       API Stats
	GET       /deki/site/settings                                   5.04       request-time-ms=2; mysql-queries=1; mysql-time-ms=0; cache-ratio=0.00; cache-hit=0; cache-miss=-1; cache-del=0; cache-ins=1;
	GET       /deki/users/=Anonymous                                6.30       request-time-ms=4; mysql-queries=4; mysql-time-ms=2; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/license                                         8.09       request-time-ms=3; mysql-queries=2; mysql-time-ms=2; cache-ratio=-0.50; cache-hit=1; cache-miss=-3; cache-del=0; cache-ins=3;
	GET       /deki/pages/30985/contents                           29.59       request-time-ms=27; mysql-queries=10; mysql-time-ms=10; cache-ratio=13.00; cache-hit=13; cache-miss=-12; cache-del=0; cache-ins=12;
	GET       /deki/pages/30985                                   340.16       request-time-ms=33; mysql-queries=21; mysql-time-ms=20; cache-ratio=-12.50; cache-hit=25; cache-miss=-27; cache-del=0; cache-ins=27;
	GET       /deki/pages/30985/info                                9.10       request-time-ms=4; mysql-queries=3; mysql-time-ms=2; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/pages/30985/tags                                7.67       request-time-ms=6; mysql-queries=5; mysql-time-ms=3; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/site/properties                                 9.27       request-time-ms=7; mysql-queries=4; mysql-time-ms=4; cache-ratio=-0.25; cache-hit=1; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/site/nav/=en%252FJavaScript%252FReference%252FGlobal%2BObjects%252FFunction%252Fcall/full    11.57       request-time-ms=8; mysql-queries=6; mysql-time-ms=5; cache-ratio=-6.00; cache-hit=6; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/pages/30985/tags                                7.81       request-time-ms=6; mysql-queries=5; mysql-time-ms=4; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	                                                             =======
	                                                     Total:   434.61      
	                                                     Ideal:   426.79      
--><div id="popupMessage"/> <div id="popupMask"/>&#13;
<div id="menuFiller"/>&#13;
<div id="bodyHeight"/>&#13;
&#13;
&#13;
<!-- END OF SmartSource Data Collector TAG -->&#13;
&#13;
</body></html>
