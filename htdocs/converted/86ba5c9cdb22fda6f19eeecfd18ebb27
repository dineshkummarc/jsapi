<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE html>
<html lang="en" dir="ltr" id="developer-mozilla-org"><body id="docs" class="section-docs en ltr yui-skin-sam PageDW-enJavaScriptReferenceGlobalObjectsStringcharAt" role="document">&#13;
<!--[if lte IE 8]>
<noscript><div class="global-notice">
<p><strong>Warning:</strong> The Mozilla Developer Network website employs emerging web standards that may not be fully supported in some versions of MicroSoft Internet Explorer. You can improve your experience of this website by enabling JavaScript.</p>
</div></noscript>
<![endif]-->&#13;
&#13;
<section class="entry-content"><div class="wrap">&#13;
  <div id="content-main" class="full">&#13;
&#13;
    &#13;
        &#13;
    <article class="article PageDW-enJavaScriptReferenceGlobalObjectsStringcharAt" role="main"><div class="page-title hideforedit">&#13;
              <h1 class="first entry-title roundTop" id="title">String.charAt</h1>            &#13;
      &#13;
              </div>&#13;
      &#13;
    <div class="page-content boxed">&#13;
&#13;
     &#13;
       &#13;
    &#13;
            &#13;
      <div id="page-top"><div class="pageText" id="pageText">
<p> </p>
<div id="section_1"><span id="Summary"/><h3 class="editable">Summary</h3>
<p>Returns the specified character from a string.</p>
<table class="standard-table"><thead><tr><th class="header" colspan="2">Method of <a rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String" title="en/JavaScript/Reference/Global_Objects/String"><code>String</code></a></th> </tr></thead><tbody><tr><td>Implemented in</td> <td>JavaScript 1.0</td> </tr><tr><td>ECMAScript Edition</td> <td>ECMAScript 1st Edition</td> </tr></tbody></table></div><div id="section_2"><span id="Syntax"/><h3 class="editable">Syntax</h3>
<p><code><em>string</em>.charAt(<em>index</em>)</code></p>
</div><div id="section_3"><span id="Parameters"/><h3 class="editable">Parameters</h3>
<dl><dt><code>index</code> </dt> <dd>An integer between 0 and 1 less than the length of the string.</dd>
</dl></div><div id="section_4"><span id="Description"/><h3 class="editable">Description</h3>
<p>Characters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character in a string called <code>stringName</code> is <code>stringName.length - 1</code>. If the <code>index</code> you supply is out of range, JavaScript returns an empty string.</p>
</div><div id="section_5"><span id="Examples"/><h3 class="editable">Examples</h3>
<div id="section_6"><span id="Example:_Displaying_characters_at_different_locations_in_a_string"/><h4 class="editable">Example: Displaying characters at different locations in a string</h4>
<p>The following example displays characters at different locations in the string "<code>Brave new world</code>":</p>
&#13;
          <pre name="code" class="js">var anyString="Brave new world";

document.writeln("The character at index 0 is '" + anyString.charAt(0) + "'");
document.writeln("The character at index 1 is '" + anyString.charAt(1) + "'");
document.writeln("The character at index 2 is '" + anyString.charAt(2) + "'");
document.writeln("The character at index 3 is '" + anyString.charAt(3) + "'");
document.writeln("The character at index 4 is '" + anyString.charAt(4) + "'");
document.writeln("The character at index 999 is '" + anyString.charAt(999) + "'");</pre>&#13;
        
<p>These lines display the following:</p>
<pre>
The character at index 0 is 'B'
The character at index 1 is 'r'
The character at index 2 is 'a'
The character at index 3 is 'v'
The character at index 4 is 'e'
The character at index 999 is ''
</pre>
</div><div id="section_7"><span id="Example_2:.C2.A0Getting_whole_characters"/><h4 class="editable">Example 2: Getting whole characters</h4>
<p>The following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.</p>
&#13;
          <pre name="code" class="js">var str = 'A\uD87E\uDC04Z'; // We could also use a non-BMP character directly
for (var i=0, chr; i &lt; str.length; i++) {
    if ((chr = getWholeChar(str, i)) === false) {continue;} // Adapt this line at the top of each loop, passing in the whole string and the current iteration and returning a variable to represent the individual character
    alert(chr);
}

function getWholeChar (str, i) {
    var code = str.charCodeAt(i);     
 
    if (isNaN(code)) {
        return ''; // Position not found
    }
    if (code &lt; 0xD800 || code &gt; 0xDFFF) {
        return str.charAt(i);
    }
    if (0xD800 &lt;= code &amp;&amp; code &lt;= 0xDBFF) { // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)
        if (str.length &lt;= (i+1))  {
            throw 'High surrogate without following low surrogate';
        }
        var next = str.charCodeAt(i+1);
        if (0xDC00 &gt; next || next &gt; 0xDFFF) {
            throw 'High surrogate without following low surrogate';
        }
        return str.charAt(i)+str.charAt(i+1);
    }
    // Low surrogate (0xDC00 &lt;= code &amp;&amp; code &lt;= 0xDFFF)
    if (i === 0) {
        throw 'Low surrogate without preceding high surrogate';
    }
    var prev = str.charCodeAt(i-1);
    if (0xD800 &gt; prev || prev &gt; 0xDBFF) { // (could change last hex to 0xDB7F to treat high private surrogates as single characters)
        throw 'Low surrogate without preceding high surrogate';
    }
    return false; // We can pass over low surrogates now as the second component in a pair which we have already processed
}</pre>&#13;
        
<p> </p>
<p>In an exclusive JavaScript 1.7+ environment (such as Firefox) which allows destructured assignment, the following is a more succinct and somewhat more flexible alternative in that it does incrementing for an incrementing variable automatically (if the character warrants it in being a surrogate pair).</p>
&#13;
          <pre name="code" class="js">var str = 'A\uD87E\uDC04Z'; // We could also use a non-BMP character directly
for (var i=0, chr; i &lt; str.length; i++) {
    [chr, i] = getWholeCharAndI(str, i); // Adapt this line at the top of each loop, passing in the whole string and the current iteration and returning an array with the individual character and 'i' value (only changed if a surrogate pair)
    alert(chr);
}

function getWholeCharAndI (str, i) {
    var code = str.charCodeAt(i);
    if (isNaN(code)) {
        return ''; // Position not found
    }
    if (code &lt; 0xD800 || code &gt; 0xDFFF) {
        return [str.charAt(i), i]; // Normal character, keeping 'i' the same
    }
    if (0xD800 &lt;= code &amp;&amp; code &lt;= 0xDBFF) { // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)
        if (str.length &lt;= (i+1))  {
            throw 'High surrogate without following low surrogate';
        }
        var next = str.charCodeAt(i+1);
        if (0xDC00 &gt; next || next &gt; 0xDFFF) {
            throw 'High surrogate without following low surrogate';
        }
        return [str.charAt(i)+str.charAt(i+1), i+1];
    }
    // Low surrogate (0xDC00 &lt;= code &amp;&amp; code &lt;= 0xDFFF)
    if (i === 0) {
        throw 'Low surrogate without preceding high surrogate';
    }
    var prev = str.charCodeAt(i-1);
    if (0xD800 &gt; prev || prev &gt; 0xDBFF) { // (could change last hex to 0xDB7F to treat high private surrogates as single characters)
        throw 'Low surrogate without preceding high surrogate';
    }
    return [str.charAt(i+1), i+1]; // Return the next character instead (and increment)
}</pre>&#13;
        
<p> </p>
</div><div id="section_8"><span id="Example_3:.C2.A0Fixing_charAt_to_support_non-Basic-Multilingual-Plane_(BMP).C2.A0characters"/><h4 class="editable">Example 3: Fixing charAt to support non-Basic-Multilingual-Plane (BMP) characters</h4>
<p>While example 2 may be more frequently useful for those wishing to support non-BMP characters (since the above does not require the caller to know where any non-BMP character might appear), in the event that one <em>does</em> wish, in choosing a character by index, to treat the surrogate pairs within a string as the single characters they represent, one can use the following:</p>
&#13;
          <pre name="code" class="js">function fixedCharAt (str, idx) {
    var ret = '';
    str += '';
    var end = str.length;

    var surrogatePairs = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
    while ((surrogatePairs.exec(str)) != null) {
        var li = surrogatePairs.lastIndex;
        if (li - 2 &lt; idx) {
            idx++;
        }
        else {
            break;
        }
    }

    if (idx &gt;= end || idx &lt; 0) {
        return '';
    }

    ret += str.charAt(idx);

    if (/[\uD800-\uDBFF]/.test(ret) &amp;&amp; /[\uDC00-\uDFFF]/.test(str.charAt(idx+1))) {
        ret += str.charAt(idx+1); // Go one further, since one of the "characters" is part of a surrogate pair
    }
    return ret;
}</pre>&#13;
        
</div></div><div id="section_9"><span id="See_Also"/><h3 class="editable">See Also</h3>
<p><a title="en/Core_JavaScript_1.5_Reference/Global_Objects/String/indexOf" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/indexOf">indexOf</a>, <a title="en/Core_JavaScript_1.5_Reference/Global_Objects/String/lastIndexOf" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/lastIndexOf">lastIndexOf</a>, <a title="en/Core_JavaScript_1.5_Reference/Global_Objects/String/split" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split">split</a>, <a title="en/Core_JavaScript_1.5_Reference/Global_Objects/String/charCodeAt" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/charCodeAt">charCodeAt</a></p>
<p> </p>
<p/></div></div></div>&#13;
            <section class="page-meta"><section id="page-files"><h2>Attachments <span class="sub">(0)</span></h2>&#13;
            <div id="pageFiles"><div class="nofiles"> </div></div>            <div id="deki-image-gallery-lite"><table class="table empty" width="100%" cellspacing="0" cellpadding="0" border="0"><colgroup><col width="33%"/><col width="33%"/><col width="33%"/></colgroup><tbody><tr class="bg1"><th class="col1" colspan="3">Images 0</th></tr><tr class="bg2"><td class="col1 empty" colspan="3">No images to display in the gallery.</td></tr></tbody></table></div>            <p class="add"><a title="Attach file" class="disabled ">Attach file</a></p>&#13;
          </section></section></div>&#13;
&#13;
    </article><p class="last-mod hideforedit">&#13;
      Page last modified <a href="/index.php?title=en/JavaScript/Reference/Global_Objects/String/charAt&amp;action=history" title="15:58, 29 Apr 2011">15:58, 29 Apr 2011</a> by <a href="/User:evilpie" class="link-user" rel="internal">evilpie</a>    </p>&#13;
&#13;
  </div><!-- /#content-main -->&#13;
&#13;
</div><!-- /.wrap -->&#13;
</section><!-- /#content --><div class="ui-msg-wrap" id="MTMessage" style="display: none;">
	<div class="ui-msg ui-errormsg" id="MTMessageStyle">
		<div class="ui-msg-opt">
			<ul><li><a href="#" class="dismiss" onclick="return MTMessage.Hide();">dismiss message</a></li>
				<li><a href="#" class="details" id="MTMessageDetailsLink" onclick="return MTMessage.ShowDetails(this);">view details</a></li>
			</ul><div class="ui-msg-autoclose">
				<span id="MTMessageUnpaused" style="display: inline;">Message will close by itself in <span id="MTMessageTimer"/> seconds</span>
				<span id="MTMessagePaused" style="display: none;">Message timer has been stopped</span>
			</div>
		</div>
		<div class="ui-msg-header" id="MTMessageHeader"/>
		<div class="ui-msg-desc" id="MTMessageDesc"/>
		<div class="ui-msg-desc" id="MTMessageDetails" style="display: none;">
			<p>Viewing Details:</p>
		</div>
	</div>
</div><!-- Served by pm-dekiwiki01.mozilla.org in 1.69 secs. --><!--
	Verb      Path                                              Time(ms)       API Stats
	GET       /deki/site/settings                                   6.37       request-time-ms=2; mysql-queries=1; mysql-time-ms=1; cache-ratio=0.00; cache-hit=0; cache-miss=-1; cache-del=0; cache-ins=1;
	GET       /deki/users/=Anonymous                               16.84       request-time-ms=14; mysql-queries=4; mysql-time-ms=11; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/license                                        12.22       request-time-ms=4; mysql-queries=2; mysql-time-ms=2; cache-ratio=-0.50; cache-hit=1; cache-miss=-3; cache-del=0; cache-ins=3;
	GET       /deki/pages/31216/contents                           62.30       request-time-ms=57; mysql-queries=10; mysql-time-ms=24; cache-ratio=-13.00; cache-hit=13; cache-miss=-14; cache-del=0; cache-ins=14;
	GET       /deki/pages/31216                                    46.82       request-time-ms=41; mysql-queries=21; mysql-time-ms=24; cache-ratio=-12.50; cache-hit=25; cache-miss=-27; cache-del=0; cache-ins=27;
	GET       /deki/pages/31216/info                                8.68       request-time-ms=6; mysql-queries=3; mysql-time-ms=3; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/pages/31216/tags                                8.39       request-time-ms=6; mysql-queries=5; mysql-time-ms=4; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/site/properties                                 9.53       request-time-ms=7; mysql-queries=4; mysql-time-ms=4; cache-ratio=-0.25; cache-hit=1; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/site/nav/=en%252FJavaScript%252FReference%252FGlobal%2BObjects%252FString%252FcharAt/full   253.70       request-time-ms=248; mysql-queries=6; mysql-time-ms=242; cache-ratio=-6.00; cache-hit=6; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/pages/31216/tags                                6.77       request-time-ms=5; mysql-queries=5; mysql-time-ms=3; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	                                                             =======
	                                                     Total:   431.61      
	                                                     Ideal:   424.84      
--><div id="popupMessage"/> <div id="popupMask"/>&#13;
<div id="menuFiller"/>&#13;
<div id="bodyHeight"/>&#13;
&#13;
&#13;
<!-- END OF SmartSource Data Collector TAG -->&#13;
&#13;
</body></html>
