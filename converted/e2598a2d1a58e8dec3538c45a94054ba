<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE html>
<html lang="en" dir="ltr" id="developer-mozilla-org"><body id="docs" class="section-docs en ltr yui-skin-sam PageDW-enJavaScriptReferenceOperatorsLogicalOperators" role="document">&#13;
<!--[if lte IE 8]>
<noscript><div class="global-notice">
<p><strong>Warning:</strong> The Mozilla Developer Network website employs emerging web standards that may not be fully supported in some versions of MicroSoft Internet Explorer. You can improve your experience of this website by enabling JavaScript.</p>
</div></noscript>
<![endif]-->&#13;
<noscript><div class="noscript">This application requires Javascript to be enabled.</div></noscript>&#13;
<section id="content"><div class="wrap">&#13;
  <div id="content-main" class="full">&#13;
&#13;
    &#13;
        &#13;
    <article class="article PageDW-enJavaScriptReferenceOperatorsLogicalOperators" role="main"><div class="page-title hideforedit">&#13;
              <h1 class="first" id="title">Logical Operators</h1>            &#13;
      &#13;
              </div>&#13;
      &#13;
    <div class="page-content boxed">&#13;
&#13;
     &#13;
       &#13;
    &#13;
            &#13;
      <div id="page-top"><div class="pageText" id="pageText"><p> </p>
<div id="section_1"><span id="Summary"/><h3 class="editable">Summary</h3>
<p>Logical operators are typically used with Boolean (logical) values; when they are, they return a Boolean value. However, the <code>&amp;&amp;</code> and <code>||</code> operators actually return the value of one of the specified operands, so if these operators are used with non-Boolean values, they may return a non-Boolean value.</p>
<table class="fullwidth-table"><tbody><tr><td class="header" colspan="2">Operators</td> </tr><tr><td>Implemented in:</td> <td>JavaScript 1.0</td> </tr><tr><td>ECMA Version:</td> <td>ECMA-262</td> </tr></tbody></table><p>The logical operators are described in the following table:</p>
<table class="fullwidth-table"><tbody><tr><th>Operator</th> <th>Usage</th> <th>Description</th> </tr><tr><td>Logical AND (<code>&amp;&amp;</code>)</td> <td><code><em>expr1</em> &amp;&amp; <em>expr2</em></code></td> <td>Returns <code>expr1</code> if it can be converted to false; otherwise, returns <code>expr2</code>. Thus, when used with Boolean values, <code>&amp;&amp;</code> returns true if both operands are true; otherwise, returns false.</td> </tr><tr><td>Logical OR (<code>||</code>)</td> <td><code><em>expr1</em> || <em>expr2</em></code></td> <td>Returns <code>expr1</code> if it can be converted to true; otherwise, returns <code>expr2</code>. Thus, when used with Boolean values, <code>||</code> returns true if either operand is true; if both are false, returns false.</td> </tr><tr><td>Logical NOT (<code>!</code>)</td> <td><code>!<em>expr</em></code></td> <td>Returns false if its single operand can be converted to true; otherwise, returns true.</td> </tr></tbody></table><p>Examples of expressions that can be converted to false are those that evaluate to null, 0, the empty string (""), or undefined.</p>
<p>Even though the <code>&amp;&amp;</code> and <code>||</code> operators can be used with operands that are not Boolean values, they can still be considered Boolean operators since their return values can always be converted to Boolean values.</p>
<div id="section_2"><span id="Short-Circuit_Evaluation"/><h4 class="editable">Short-Circuit Evaluation</h4>
<p>As logical expressions are evaluated left to right, they are tested for possible "short-circuit" evaluation using the following rules:</p>
<ul><li><code>false &amp;&amp; <em>anything</em></code> is short-circuit evaluated to false.</li> <li><code>true || <em>anything</em></code> is short-circuit evaluated to true.</li>
</ul><p>The rules of logic guarantee that these evaluations are always correct. Note that the anything part of the above expressions is not evaluated, so any side effects of doing so do not take effect.</p>
<p>For example, the following two functions are equivalent.</p>
<pre>function shortCircuitEvaluation() {
  doSomething() || doSomethingElse()
}

function equivalentEvaluation() {
  var flag = doSomething();
  if (!flag) {
    doSomethingElse();
  }
}
</pre>
</div></div><div id="section_3"><span id="Backward_Compatibility"/><h3 class="editable">Backward Compatibility</h3>
<div id="section_4"><span id="JavaScript_1.0_and_1.1"/><h4 class="editable">JavaScript 1.0 and 1.1</h4>
<p>The <code>&amp;&amp;</code> and <code>||</code> operators behave as follows:</p>
<table class="fullwidth-table"><tbody><tr><th>Operator</th> <th>Usage</th> <th>Behavior</th> </tr><tr><td><code>&amp;&amp;</code></td> <td><code><em>expr1</em> &amp;&amp; <em>expr2</em></code></td> <td>If the first operand (<code>expr1</code>) can be converted to false, the <code>&amp;&amp;</code> operator returns false rather than the value of <code>expr1</code>.</td> </tr><tr><td><code>||</code></td> <td><code><em>expr1</em> || <em>expr2</em></code></td> <td>If the first operand (<code>expr1</code>) can be converted to true, the <code>||</code> operator returns true rather than the value of <code>expr1</code>.</td> </tr></tbody></table></div></div><div id="section_5"><span id="Examples"/><h3 class="editable">Examples</h3>
<div id="section_6"><span id="Logical_AND_.28&amp;&amp;.29"/><span id="Logical_AND_(.26.26)"/><h4 class="editable">Logical AND (<code>&amp;&amp;</code>)</h4>
<p>The following code shows examples of the <code>&amp;&amp;</code> (logical AND) operator.</p>
<pre>
a1=true &amp;&amp; true       // t &amp;&amp; t returns true
a2=true &amp;&amp; false      // t &amp;&amp; f returns false
a3=false &amp;&amp; true      // f &amp;&amp; t returns false
a4=false &amp;&amp; (3 == 4)  // f &amp;&amp; f returns false
a5="Cat" &amp;&amp; "Dog"     // t &amp;&amp; t returns Dog
a6=false &amp;&amp; "Cat"     // f &amp;&amp; t returns false
a7="Cat" &amp;&amp; false     // t &amp;&amp; f returns false
</pre>
</div><div id="section_7"><span id="Logical_OR_.28||.29"/><span id="Logical_OR_(.7C.7C)"/><h4 class="editable">Logical OR (<code>||</code>)</h4>
<p>The following code shows examples of the <code>||</code> (logical OR) operator.</p>
<pre>
o1=true || true       // t || t returns true
o2=false || true      // f || t returns true
o3=true || false      // t || f returns true
o4=false || (3 == 4)  // f || f returns false
o5="Cat" || "Dog"     // t || t returns Cat
o6=false || "Cat"     // f || t returns Cat
o7="Cat" || false     // t || f returns Cat
</pre>
</div><div id="section_8"><span id="Logical_NOT_.28.21.29"/><span id="Logical_NOT_(!)"/><h4 class="editable">Logical NOT (<code>!</code>)</h4>
<p>The following code shows examples of the <code>!</code> (logical NOT) operator.</p>
<pre>
n1=!true              // !t returns false
n2=!false             // !f returns true
n3=!"Cat"             // !t returns false
</pre>
<p> </p>
<p/></div></div></div></div>&#13;
            <section class="page-meta"><section id="page-tags"><h2>Tags <span class="sub">(0)</span></h2>&#13;
              <a href="/index.php?title=Special:Tags&amp;pageId=30772" class="disabled" onclick="return false;" id="deki-page-tags-toggleview">Edit tags</a>              <div id="deki-page-tags"><ul class="tags no-tags"><li>No tags</li></ul></div>          </section><section id="page-files"><h2>Attachments <span class="sub">(0)</span></h2>&#13;
            <div id="pageFiles"><div class="nofiles"> </div></div>            <div id="deki-image-gallery-lite"><table class="table empty" width="100%" cellspacing="0" cellpadding="0" border="0"><colgroup><col width="33%"/><col width="33%"/><col width="33%"/></colgroup><tbody><tr class="bg1"><th class="col1" colspan="3">Images 0</th></tr><tr class="bg2"><td class="col1 empty" colspan="3">No images to display in the gallery.</td></tr></tbody></table></div>            <p class="add"><a title="Attach file" class="disabled ">Attach file</a></p>&#13;
          </section></section></div>&#13;
&#13;
    </article><p class="last-mod hideforedit">&#13;
      Page last modified <a href="/index.php?title=en/JavaScript/Reference/Operators/Logical_Operators&amp;action=history" title="01:23, 14 Dec 2011">01:23, 14 Dec 2011</a> by <a href="/User:Havvy" class="link-user" rel="internal">Havvy</a>    </p>&#13;
&#13;
  </div><!-- /#content-main -->&#13;
&#13;
</div><!-- /.wrap -->&#13;
</section><!-- /#content --><div class="ui-msg-wrap" id="MTMessage" style="display: none;">
	<div class="ui-msg ui-errormsg" id="MTMessageStyle">
		<div class="ui-msg-opt">
			<ul><li><a href="#" class="dismiss" onclick="return MTMessage.Hide();">dismiss message</a></li>
				<li><a href="#" class="details" id="MTMessageDetailsLink" onclick="return MTMessage.ShowDetails(this);">view details</a></li>
			</ul><div class="ui-msg-autoclose">
				<span id="MTMessageUnpaused" style="display: inline;">Message will close by itself in <span id="MTMessageTimer"/> seconds</span>
				<span id="MTMessagePaused" style="display: none;">Message timer has been stopped</span>
			</div>
		</div>
		<div class="ui-msg-header" id="MTMessageHeader"/>
		<div class="ui-msg-desc" id="MTMessageDesc"/>
		<div class="ui-msg-desc" id="MTMessageDetails" style="display: none;">
			<p>Viewing Details:</p>
		</div>
	</div>
</div><!-- Served by pm-dekiwiki01.mozilla.org in 0.55 secs. --><!--
	Verb      Path                                              Time(ms)       API Stats
	GET       /deki/site/settings                                   5.28       request-time-ms=2; mysql-queries=1; mysql-time-ms=1; cache-ratio=0.00; cache-hit=0; cache-miss=-1; cache-del=0; cache-ins=1;
	GET       /deki/users/=Anonymous                                7.28       request-time-ms=5; mysql-queries=4; mysql-time-ms=3; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/license                                         7.26       request-time-ms=3; mysql-queries=2; mysql-time-ms=1; cache-ratio=-0.50; cache-hit=1; cache-miss=-3; cache-del=0; cache-ins=3;
	GET       /deki/pages/30772/contents                           47.50       request-time-ms=45; mysql-queries=11; mysql-time-ms=28; cache-ratio=-13.00; cache-hit=13; cache-miss=-14; cache-del=0; cache-ins=13;
	GET       /deki/pages/30772                                    81.10       request-time-ms=78; mysql-queries=20; mysql-time-ms=56; cache-ratio=-25.00; cache-hit=25; cache-miss=-26; cache-del=0; cache-ins=26;
	GET       /deki/pages/30772/info                               11.33       request-time-ms=4; mysql-queries=3; mysql-time-ms=2; cache-ratio=-0.67; cache-hit=2; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/pages/30772/tags                                6.32       request-time-ms=5; mysql-queries=4; mysql-time-ms=3; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/site/properties                                11.36       request-time-ms=7; mysql-queries=4; mysql-time-ms=5; cache-ratio=-0.25; cache-hit=1; cache-miss=-5; cache-del=0; cache-ins=5;
	GET       /deki/site/nav/=en%252FJavaScript%252FReference%252FOperators%252FLogical%2BOperators/full   248.34       request-time-ms=245; mysql-queries=6; mysql-time-ms=241; cache-ratio=-6.00; cache-hit=6; cache-miss=-7; cache-del=0; cache-ins=7;
	GET       /deki/pages/30772/tags                                6.42       request-time-ms=5; mysql-queries=4; mysql-time-ms=3; cache-ratio=-0.75; cache-hit=3; cache-miss=-7; cache-del=0; cache-ins=7;
	                                                             =======
	                                                     Total:   432.21      
	                                                     Ideal:   425.78      
--><div id="popupMessage"/> <div id="popupMask"/>&#13;
<div id="menuFiller"/>&#13;
<div id="bodyHeight"/>&#13;
&#13;
<noscript>&#13;
<div><img alt="DCSIMG" id="DCSIMG" width="1" height="1" src="https://statse.webtrendslive.com/dcs8yrjuavz5bdaun34r2o8bi_8o8x/njs.gif?dcsuri=/nojavascript&amp;WT.js=No&amp;WT.tv=8.6.2"/></div>&#13;
</noscript>&#13;
<!-- END OF SmartSource Data Collector TAG -->&#13;
&#13;
 &#13;
</body></html>
